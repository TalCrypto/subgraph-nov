// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AssetDepositIntoStrategy extends ethereum.Event {
  get params(): AssetDepositIntoStrategy__Params {
    return new AssetDepositIntoStrategy__Params(this);
  }
}

export class AssetDepositIntoStrategy__Params {
  _event: AssetDepositIntoStrategy;

  constructor(event: AssetDepositIntoStrategy) {
    this._event = event;
  }

  get asset(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get strategy(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get depositAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ETHDepositFromDepositPool extends ethereum.Event {
  get params(): ETHDepositFromDepositPool__Params {
    return new ETHDepositFromDepositPool__Params(this);
  }
}

export class ETHDepositFromDepositPool__Params {
  _event: ETHDepositFromDepositPool;

  constructor(event: ETHDepositFromDepositPool) {
    this._event = event;
  }

  get depositAmount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ETHRewardsClaimed extends ethereum.Event {
  get params(): ETHRewardsClaimed__Params {
    return new ETHRewardsClaimed__Params(this);
  }
}

export class ETHRewardsClaimed__Params {
  _event: ETHRewardsClaimed;

  constructor(event: ETHRewardsClaimed) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ETHRewardsWithdrawInitiated extends ethereum.Event {
  get params(): ETHRewardsWithdrawInitiated__Params {
    return new ETHRewardsWithdrawInitiated__Params(this);
  }
}

export class ETHRewardsWithdrawInitiated__Params {
  _event: ETHRewardsWithdrawInitiated;

  constructor(event: ETHRewardsWithdrawInitiated) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ETHStaked extends ethereum.Event {
  get params(): ETHStaked__Params {
    return new ETHStaked__Params(this);
  }
}

export class ETHStaked__Params {
  _event: ETHStaked;

  constructor(event: ETHStaked) {
    this._event = event;
  }

  get valPubKey(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class EigenPodCreated extends ethereum.Event {
  get params(): EigenPodCreated__Params {
    return new EigenPodCreated__Params(this);
  }
}

export class EigenPodCreated__Params {
  _event: EigenPodCreated;

  constructor(event: EigenPodCreated) {
    this._event = event;
  }

  get eigenPod(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get podOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UpdatedLRTConfig extends ethereum.Event {
  get params(): UpdatedLRTConfig__Params {
    return new UpdatedLRTConfig__Params(this);
  }
}

export class UpdatedLRTConfig__Params {
  _event: UpdatedLRTConfig;

  constructor(event: UpdatedLRTConfig) {
    this._event = event;
  }

  get lrtConfig(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NodeDelegator__getAssetBalancesResult {
  value0: Array<Address>;
  value1: Array<BigInt>;

  constructor(value0: Array<Address>, value1: Array<BigInt>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    return map;
  }

  getAssets(): Array<Address> {
    return this.value0;
  }

  getAssetBalances(): Array<BigInt> {
    return this.value1;
  }
}

export class NodeDelegator extends ethereum.SmartContract {
  static bind(address: Address): NodeDelegator {
    return new NodeDelegator("NodeDelegator", address);
  }

  eigenPod(): Address {
    let result = super.call("eigenPod", "eigenPod():(address)", []);

    return result[0].toAddress();
  }

  try_eigenPod(): ethereum.CallResult<Address> {
    let result = super.tryCall("eigenPod", "eigenPod():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAssetBalance(asset: Address): BigInt {
    let result = super.call(
      "getAssetBalance",
      "getAssetBalance(address):(uint256)",
      [ethereum.Value.fromAddress(asset)],
    );

    return result[0].toBigInt();
  }

  try_getAssetBalance(asset: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAssetBalance",
      "getAssetBalance(address):(uint256)",
      [ethereum.Value.fromAddress(asset)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAssetBalances(): NodeDelegator__getAssetBalancesResult {
    let result = super.call(
      "getAssetBalances",
      "getAssetBalances():(address[],uint256[])",
      [],
    );

    return new NodeDelegator__getAssetBalancesResult(
      result[0].toAddressArray(),
      result[1].toBigIntArray(),
    );
  }

  try_getAssetBalances(): ethereum.CallResult<NodeDelegator__getAssetBalancesResult> {
    let result = super.tryCall(
      "getAssetBalances",
      "getAssetBalances():(address[],uint256[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new NodeDelegator__getAssetBalancesResult(
        value[0].toAddressArray(),
        value[1].toBigIntArray(),
      ),
    );
  }

  getETHEigenPodBalance(): BigInt {
    let result = super.call(
      "getETHEigenPodBalance",
      "getETHEigenPodBalance():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_getETHEigenPodBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getETHEigenPodBalance",
      "getETHEigenPodBalance():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lrtConfig(): Address {
    let result = super.call("lrtConfig", "lrtConfig():(address)", []);

    return result[0].toAddress();
  }

  try_lrtConfig(): ethereum.CallResult<Address> {
    let result = super.tryCall("lrtConfig", "lrtConfig():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  stakedButUnverifiedNativeETH(): BigInt {
    let result = super.call(
      "stakedButUnverifiedNativeETH",
      "stakedButUnverifiedNativeETH():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_stakedButUnverifiedNativeETH(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "stakedButUnverifiedNativeETH",
      "stakedButUnverifiedNativeETH():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveSSVCall extends ethereum.Call {
  get inputs(): ApproveSSVCall__Inputs {
    return new ApproveSSVCall__Inputs(this);
  }

  get outputs(): ApproveSSVCall__Outputs {
    return new ApproveSSVCall__Outputs(this);
  }
}

export class ApproveSSVCall__Inputs {
  _call: ApproveSSVCall;

  constructor(call: ApproveSSVCall) {
    this._call = call;
  }
}

export class ApproveSSVCall__Outputs {
  _call: ApproveSSVCall;

  constructor(call: ApproveSSVCall) {
    this._call = call;
  }
}

export class ClaimRewardsCall extends ethereum.Call {
  get inputs(): ClaimRewardsCall__Inputs {
    return new ClaimRewardsCall__Inputs(this);
  }

  get outputs(): ClaimRewardsCall__Outputs {
    return new ClaimRewardsCall__Outputs(this);
  }
}

export class ClaimRewardsCall__Inputs {
  _call: ClaimRewardsCall;

  constructor(call: ClaimRewardsCall) {
    this._call = call;
  }

  get maxNumberOfDelayedWithdrawalsToClaim(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimRewardsCall__Outputs {
  _call: ClaimRewardsCall;

  constructor(call: ClaimRewardsCall) {
    this._call = call;
  }
}

export class CreateEigenPodCall extends ethereum.Call {
  get inputs(): CreateEigenPodCall__Inputs {
    return new CreateEigenPodCall__Inputs(this);
  }

  get outputs(): CreateEigenPodCall__Outputs {
    return new CreateEigenPodCall__Outputs(this);
  }
}

export class CreateEigenPodCall__Inputs {
  _call: CreateEigenPodCall;

  constructor(call: CreateEigenPodCall) {
    this._call = call;
  }
}

export class CreateEigenPodCall__Outputs {
  _call: CreateEigenPodCall;

  constructor(call: CreateEigenPodCall) {
    this._call = call;
  }
}

export class DepositAssetIntoStrategyCall extends ethereum.Call {
  get inputs(): DepositAssetIntoStrategyCall__Inputs {
    return new DepositAssetIntoStrategyCall__Inputs(this);
  }

  get outputs(): DepositAssetIntoStrategyCall__Outputs {
    return new DepositAssetIntoStrategyCall__Outputs(this);
  }
}

export class DepositAssetIntoStrategyCall__Inputs {
  _call: DepositAssetIntoStrategyCall;

  constructor(call: DepositAssetIntoStrategyCall) {
    this._call = call;
  }

  get asset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DepositAssetIntoStrategyCall__Outputs {
  _call: DepositAssetIntoStrategyCall;

  constructor(call: DepositAssetIntoStrategyCall) {
    this._call = call;
  }
}

export class DepositSSVCall extends ethereum.Call {
  get inputs(): DepositSSVCall__Inputs {
    return new DepositSSVCall__Inputs(this);
  }

  get outputs(): DepositSSVCall__Outputs {
    return new DepositSSVCall__Outputs(this);
  }
}

export class DepositSSVCall__Inputs {
  _call: DepositSSVCall;

  constructor(call: DepositSSVCall) {
    this._call = call;
  }

  get operatorIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get cluster(): DepositSSVCallClusterStruct {
    return changetype<DepositSSVCallClusterStruct>(
      this._call.inputValues[2].value.toTuple(),
    );
  }
}

export class DepositSSVCall__Outputs {
  _call: DepositSSVCall;

  constructor(call: DepositSSVCall) {
    this._call = call;
  }
}

export class DepositSSVCallClusterStruct extends ethereum.Tuple {
  get validatorCount(): BigInt {
    return this[0].toBigInt();
  }

  get networkFeeIndex(): BigInt {
    return this[1].toBigInt();
  }

  get index(): BigInt {
    return this[2].toBigInt();
  }

  get active(): boolean {
    return this[3].toBoolean();
  }

  get balance(): BigInt {
    return this[4].toBigInt();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get lrtConfigAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitiateWithdrawRewardsCall extends ethereum.Call {
  get inputs(): InitiateWithdrawRewardsCall__Inputs {
    return new InitiateWithdrawRewardsCall__Inputs(this);
  }

  get outputs(): InitiateWithdrawRewardsCall__Outputs {
    return new InitiateWithdrawRewardsCall__Outputs(this);
  }
}

export class InitiateWithdrawRewardsCall__Inputs {
  _call: InitiateWithdrawRewardsCall;

  constructor(call: InitiateWithdrawRewardsCall) {
    this._call = call;
  }
}

export class InitiateWithdrawRewardsCall__Outputs {
  _call: InitiateWithdrawRewardsCall;

  constructor(call: InitiateWithdrawRewardsCall) {
    this._call = call;
  }
}

export class MaxApproveToEigenStrategyManagerCall extends ethereum.Call {
  get inputs(): MaxApproveToEigenStrategyManagerCall__Inputs {
    return new MaxApproveToEigenStrategyManagerCall__Inputs(this);
  }

  get outputs(): MaxApproveToEigenStrategyManagerCall__Outputs {
    return new MaxApproveToEigenStrategyManagerCall__Outputs(this);
  }
}

export class MaxApproveToEigenStrategyManagerCall__Inputs {
  _call: MaxApproveToEigenStrategyManagerCall;

  constructor(call: MaxApproveToEigenStrategyManagerCall) {
    this._call = call;
  }

  get asset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class MaxApproveToEigenStrategyManagerCall__Outputs {
  _call: MaxApproveToEigenStrategyManagerCall;

  constructor(call: MaxApproveToEigenStrategyManagerCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RegisterSsvValidatorCall extends ethereum.Call {
  get inputs(): RegisterSsvValidatorCall__Inputs {
    return new RegisterSsvValidatorCall__Inputs(this);
  }

  get outputs(): RegisterSsvValidatorCall__Outputs {
    return new RegisterSsvValidatorCall__Outputs(this);
  }
}

export class RegisterSsvValidatorCall__Inputs {
  _call: RegisterSsvValidatorCall;

  constructor(call: RegisterSsvValidatorCall) {
    this._call = call;
  }

  get publicKey(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get operatorIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get sharesData(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get cluster(): RegisterSsvValidatorCallClusterStruct {
    return changetype<RegisterSsvValidatorCallClusterStruct>(
      this._call.inputValues[4].value.toTuple(),
    );
  }
}

export class RegisterSsvValidatorCall__Outputs {
  _call: RegisterSsvValidatorCall;

  constructor(call: RegisterSsvValidatorCall) {
    this._call = call;
  }
}

export class RegisterSsvValidatorCallClusterStruct extends ethereum.Tuple {
  get validatorCount(): BigInt {
    return this[0].toBigInt();
  }

  get networkFeeIndex(): BigInt {
    return this[1].toBigInt();
  }

  get index(): BigInt {
    return this[2].toBigInt();
  }

  get active(): boolean {
    return this[3].toBoolean();
  }

  get balance(): BigInt {
    return this[4].toBigInt();
  }
}

export class SendETHFromDepositPoolToNDCCall extends ethereum.Call {
  get inputs(): SendETHFromDepositPoolToNDCCall__Inputs {
    return new SendETHFromDepositPoolToNDCCall__Inputs(this);
  }

  get outputs(): SendETHFromDepositPoolToNDCCall__Outputs {
    return new SendETHFromDepositPoolToNDCCall__Outputs(this);
  }
}

export class SendETHFromDepositPoolToNDCCall__Inputs {
  _call: SendETHFromDepositPoolToNDCCall;

  constructor(call: SendETHFromDepositPoolToNDCCall) {
    this._call = call;
  }
}

export class SendETHFromDepositPoolToNDCCall__Outputs {
  _call: SendETHFromDepositPoolToNDCCall;

  constructor(call: SendETHFromDepositPoolToNDCCall) {
    this._call = call;
  }
}

export class Stake32EthCall extends ethereum.Call {
  get inputs(): Stake32EthCall__Inputs {
    return new Stake32EthCall__Inputs(this);
  }

  get outputs(): Stake32EthCall__Outputs {
    return new Stake32EthCall__Outputs(this);
  }
}

export class Stake32EthCall__Inputs {
  _call: Stake32EthCall;

  constructor(call: Stake32EthCall) {
    this._call = call;
  }

  get pubkey(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get signature(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get depositDataRoot(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class Stake32EthCall__Outputs {
  _call: Stake32EthCall;

  constructor(call: Stake32EthCall) {
    this._call = call;
  }
}

export class Stake32EthValidatedCall extends ethereum.Call {
  get inputs(): Stake32EthValidatedCall__Inputs {
    return new Stake32EthValidatedCall__Inputs(this);
  }

  get outputs(): Stake32EthValidatedCall__Outputs {
    return new Stake32EthValidatedCall__Outputs(this);
  }
}

export class Stake32EthValidatedCall__Inputs {
  _call: Stake32EthValidatedCall;

  constructor(call: Stake32EthValidatedCall) {
    this._call = call;
  }

  get pubkey(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get signature(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get depositDataRoot(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get expectedDepositRoot(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class Stake32EthValidatedCall__Outputs {
  _call: Stake32EthValidatedCall;

  constructor(call: Stake32EthValidatedCall) {
    this._call = call;
  }
}

export class TransferBackToLRTDepositPoolCall extends ethereum.Call {
  get inputs(): TransferBackToLRTDepositPoolCall__Inputs {
    return new TransferBackToLRTDepositPoolCall__Inputs(this);
  }

  get outputs(): TransferBackToLRTDepositPoolCall__Outputs {
    return new TransferBackToLRTDepositPoolCall__Outputs(this);
  }
}

export class TransferBackToLRTDepositPoolCall__Inputs {
  _call: TransferBackToLRTDepositPoolCall;

  constructor(call: TransferBackToLRTDepositPoolCall) {
    this._call = call;
  }

  get asset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferBackToLRTDepositPoolCall__Outputs {
  _call: TransferBackToLRTDepositPoolCall;

  constructor(call: TransferBackToLRTDepositPoolCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpdateLRTConfigCall extends ethereum.Call {
  get inputs(): UpdateLRTConfigCall__Inputs {
    return new UpdateLRTConfigCall__Inputs(this);
  }

  get outputs(): UpdateLRTConfigCall__Outputs {
    return new UpdateLRTConfigCall__Outputs(this);
  }
}

export class UpdateLRTConfigCall__Inputs {
  _call: UpdateLRTConfigCall;

  constructor(call: UpdateLRTConfigCall) {
    this._call = call;
  }

  get lrtConfigAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateLRTConfigCall__Outputs {
  _call: UpdateLRTConfigCall;

  constructor(call: UpdateLRTConfigCall) {
    this._call = call;
  }
}
